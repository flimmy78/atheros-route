############################################################################
# Make db12x-jffs2  vmlinux.lzma.uImage to ota image 
# add by luodp
############################################################################

#
# Partition Information
#

#
#256k(u-boot),64k(u-boot-env),14528k(rootfs),1408k(uImage),64k(mib0),64k(ART)
#6 MTD partitions
#0x000000000000-0x000000040000 : "u-boot"
#0x000000040000-0x000000050000 : "u-boot-env"
#0x000000050000-0x000000e80000 : "rootfs"
#0x000000e80000-0x000000fe0000 : "uImage"
#0x000000fe0000-0x000000ff0000 : "mib0"
#0x000000ff0000-0x000001000000 : "ART"
#

#
# Image Information
#

KERNEL_IMAGE_NAME = vmlinux.lzma.uImage
KERNEL_SIZE = 0x160000

ROOTFS_IMAGE_NAME = db12x-jffs2
ROOTFS_SIZE = 0xe30000


#
# OneImage Information
#

PACKED_SIZE = 16M
PACKED_IMAGE_2 = ota.bin

makeotaimage: check_otaimg

	@echo "Begin Packed OTA Image Size"

# Copy Kernel
	@cp $(Image_DIR)/$(KERNEL_IMAGE_NAME) $(Image_DIR)/$(PACKED_IMAGE_2)

# Finish Kernel and mib0 and ART Padding
	@SIZE=`wc -c $(Image_DIR)/$(KERNEL_IMAGE_NAME) | awk '{ print $$1 }'` ; \
	KERNEL_PART_SIZE=`printf "%d" $(KERNEL_SIZE)` ; \
	PAD=`expr $$KERNEL_PART_SIZE - $$SIZE` ; \
	dd if=/dev/zero count=1 bs=$$PAD 2> /dev/null | \
	tr \\000 \\377 >> $(Image_DIR)/$(PACKED_IMAGE_2)	
	
# Copy Rootfs
	@cat $(Image_DIR)/$(ROOTFS_IMAGE_NAME) >> $(Image_DIR)/$(PACKED_IMAGE_2)

	@echo "End Packed OTA Image Size "


check_otaimg:

	@if [ ! -f $(Image_DIR)/$(KERNEL_IMAGE_NAME) ]; then \
	echo "" ; \
	echo "Please copy \"$(KERNEL_IMAGE_NAME)\" to $(Image_DIR)"; \
	echo "" ; \
	exit 1; \
	fi
		
	@if [ ! -f $(Image_DIR)/$(ROOTFS_IMAGE_NAME) ]; then \
	echo "" ; \
	echo "Please copy \"$(ROOTFS_IMAGE_NAME)\" to $(Image_DIR)"; \
	echo "" ; \
	exit 1; \
	fi
